general:
  name: control_port
interface:
  proc_time:
    type: input
    width: 32
  result:
    type: input
    width: 32
  ctrl:
    type: input
    width: 4
  int_result:
    type: input
    width: 32
#  start:
#    type: input
#    width: 4
#  dbg2:
#    type: input
#    width: 32
#  lcm_dbg:
#    type: input
#    width: 8
  A:
    type: output
    width: 16
    default: 0xC3FB
  B:
    type: output
    width: 16
    default: 0xE7A3
#
# Examples for other other possible interfaces
#
# Creates a 32 bit wide output signal, after reset the output value will be initalized to 0xdeadbeef
#
# Creates a single bit output signal, that can be set for excatly one clock cycle by writing 1 to the interface
#  start:
#    type: event
#
# Instanciates a FIFO that can be written by software and read by the hardware
#  output_stream:
#    type: output_fifo
#    width: 8
#    depth: 16
#
# Instanciates a FIFO that can be read by software and written by the hardware
#  input_stream:
#    type: input_fifo
#    width: 8
#    depth: 16
